<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<sqlquery type="MSSQL">
	<sql-select name="GetInstanceMemoryUtilization">
		<reference>
			http://www.sqlskills.com/blogs/jonathan/wow-an-online-calculator-to-misconfigure-your-sql-server-memory/
		</reference>
		<sql-select-text MinSupportedVersion="9.*" MaxSupportedVersion="*" signature="">
			SELECT
				 x.[RecordEventTime]                                                                  AS [EventTime]
				,x.[RecordTimeStamp]                                                                  AS [RecordTimeStamp]
				,x.[RingBufferType]                                                                   AS [RecordRingBufferType]
				,XMLRecord.value('(//Record/@id)[1]', 'int')                                          AS [RecordId]
				,XMLRecord.value('(//Record/@type)[1]', 'varchar(128)')                               AS [RecordType]
				,XMLRecord.value('(//Record/@time)[1]', 'bigint')                                     AS [RecordTime]
				,XMLRecord.value('(./Record/ResourceMonitor/Notification)[1]', 'varchar(max)')        AS [NotificationType]
				,XMLRecord.value('(./Record/ResourceMonitor/IndicatorsProcess)[1]', 'int')            AS [IndicatorsProcess]
				,XMLRecord.value('(./Record/ResourceMonitor/IndicatorsSystem)[1]', 'int')             AS [IndicatorsSystem]
				,XMLRecord.value('(./Record/MemoryRecord/AvailablePhysicalMemory)[1]', 'bigint')      AS [AvailiblePhysicalMemoryKb]
				,XMLRecord.value('(./Record/MemoryRecord/AvailableVirtualAddressSpace)[1]', 'bigint') AS [AvailibleVirtualMemoryKb]
				,XMLRecord.value('(./Record/MemoryRecord/AvailablePageFile)[1]', 'bigint')            AS [AvailablePageFileKb]
				,XMLRecord.value('(./Record/MemoryNode/ReservedMemory)[1]', 'bigint')                 AS [ReservedMemoryKb]
				,XMLRecord.value('(./Record/MemoryNode/CommittedMemory)[1]', 'bigint')                AS [CommittedMemoryKb]
			FROM (
				SELECT
					 DATEADD(ms, t.[timestamp] - tSDOSI.[ms_ticks], GETDATE()) AS [RecordEventTime]
					,t.[timestamp]                                             AS [RecordTimeStamp]
					,t.[ring_buffer_type]                                      AS [RingBufferType]
					,CONVERT([XML], t.[record])                                AS [XMLRecord]
				FROM
					[sys].[dm_os_ring_buffers] t
					CROSS JOIN [sys].[dm_os_sys_info] AS tSDOSI
				WHERE
					t.[ring_buffer_type] = N'RING_BUFFER_RESOURCE_MONITOR'
					AND t.[record] LIKE '% %'
					AND (tSDOSI.[ms_ticks] - t.[timestamp]) &lt; 2147483647
				) AS x
			ORDER BY
				x.[RecordEventTime] ASC
			;
		</sql-select-text>
		<sqlite_statements>
			<sqlite_statement id="13">
				INSERT INTO [hist].[h_ServerInstance]
				(
					 [d_Query_id]
					,[d_ServerInstance_id]
					,[ServerInstanceName]
					,[ConnectionName]
				)
				SELECT
					 MIN(dQ.[rowid])
					,MIN(dQ.[d_ServerInstance_id])
					,dSI.[ServerInstanceName]
					,MIN(IFNULL(dSI.[ConnectionName], ''))
				FROM
					[d_Query] dQ
					INNER JOIN [d_ServerInstance] dSI ON
						dSI.[rowid] = dQ.[d_ServerInstance_id]
					LEFT OUTER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[ServerInstanceName] = dSI.[ServerInstanceName]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND dSI.[ServerInstanceName] IS NOT NULL
					AND hSI.[rowid] IS NULL
				GROUP BY
					dSI.[ServerInstanceName]
				;
			</sqlite_statement>
			<sqlite_statement id="14">
				UPDATE [hist].[h_ServerInstance] SET
					 [d_Query_id] = @d_Query_id
					,[d_ServerInstance_id] = (
						SELECT
							MIN(dQ.[d_ServerInstance_id])
						FROM
							[d_Query] dQ
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dQ.[d_ServerInstance_id] IS NOT NULL
					)
				WHERE
					[ServerInstanceName] = (
						SELECT
							MIN(dSI.[ServerInstanceName])
						FROM
							[d_Query] dQ
							INNER JOIN [d_ServerInstance] dSI ON
								dSI.[rowid] = dQ.[d_ServerInstance_id]
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dSI.[ServerInstanceName] IS NOT NULL
					) AND [d_ServerInstance_id] != (
						SELECT
							MIN(dQ.[d_ServerInstance_id])
						FROM
							[d_Query] dQ
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dQ.[d_ServerInstance_id] IS NOT NULL
					)
				;
			</sqlite_statement>
			<sqlite_statement id="31">
				INSERT INTO [hist].[h_InstanceMemoryUtilization]
				(
					 [d_Query_id]
					,[h_ServerInstance_id]
					,[EventDay]
					,[EventTime]
					,[RecordTimeStamp]
					,[RecordRingBufferType]
					,[AvailiblePhysicalMemoryKb]
					,[AvailibleVirtualMemoryKb]
					,[AvailablePageFileKb]
					,[ReservedMemoryKb]
					,[CommittedMemoryKb]
				)
				SELECT
					 dQ.[rowid]
					,hSI.[rowid]
					,date(t.[EventTime])
					,t.[EventTime]
					,t.[RecordTimeStamp]
					,t.[RecordRingBufferType]
					,t.[AvailiblePhysicalMemoryKb]
					,t.[AvailibleVirtualMemoryKb]
					,t.[AvailablePageFileKb]
					,t.[ReservedMemoryKb]
					,t.[CommittedMemoryKb]
				FROM
					[d_Query] dQ
					INNER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
					INNER JOIN [report].[${GetInstanceMemoryUtilization}$_${1}$] t ON
						t.[d_Query_id] = dQ.[rowid]
					LEFT OUTER JOIN [hist].[h_InstanceMemoryUtilization] hGIMU ON
						hGIMU.[h_ServerInstance_id] = hSI.[rowid]
						AND hGIMU.[RecordTimeStamp] = t.[RecordTimeStamp]
						AND hGIMU.[RecordRingBufferType] = t.[RecordRingBufferType]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND hGIMU.[rowid] IS NULL;
			</sqlite_statement>
			<sqlite_statement id="32">
				UPDATE [hist].[h_InstanceMemoryUtilization] SET
					[DateUpdated] = (
						SELECT
							DATETIME('now')
						FROM
							[d_Query] dQ
							INNER JOIN [hist].[h_ServerInstance] hSI ON
								hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
							INNER JOIN [report].[${GetInstanceMemoryUtilization}$_${1}$] t ON
								t.[d_Query_id] = dQ.[rowid]
						WHERE
							dQ.[rowid] = @d_Query_id
							AND t.[RecordTimeStamp] = [hist].[h_InstanceMemoryUtilization].[RecordTimeStamp]
							AND t.[RecordRingBufferType] = [hist].[h_InstanceMemoryUtilization].[RecordRingBufferType]
					)
				WHERE
					EXISTS (
						SELECT
							1
						FROM
							[d_Query] dQ
							INNER JOIN [hist].[h_ServerInstance] hSI ON
								hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
							INNER JOIN [report].[${GetInstanceMemoryUtilization}$_${1}$] t ON
								t.[d_Query_id] = dQ.[rowid]
						WHERE
							dQ.[rowid] = @d_Query_id
							AND t.[RecordTimeStamp] = [hist].[h_InstanceMemoryUtilization].[RecordTimeStamp]
							AND t.[RecordRingBufferType] = [hist].[h_InstanceMemoryUtilization].[RecordRingBufferType]
					);
			</sqlite_statement>
		</sqlite_statements>
	</sql-select>
</sqlquery>
</root>

