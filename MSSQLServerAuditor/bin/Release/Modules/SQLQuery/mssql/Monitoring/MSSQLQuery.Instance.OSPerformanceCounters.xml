<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<sqlquery type="MSSQL">
	<sql-select name="GetInstanceOSPerformanceCounters">
		<name>
			GetInstanceOSPerformanceCounters
		</name>
		<description>
			Server Counters for Monitoring SQL Server Performance
		</description>
		<reference>
			http://www.databasejournal.com/features/mssql/article.php/3932406/Top-10-SQL-Server-Counters-for-Monitoring-SQL-Server-Performance.htm
		</reference>
		<sql-select-text MinSupportedVersion="9.*" MaxSupportedVersion="*" signature="">
			SET NOCOUNT ON;
			SET DEADLOCK_PRIORITY LOW;

			DECLARE
				@EventTime [DATETIME]
			;

			SELECT @EventTime = GETDATE();

			SELECT
				 @EventTime                                    AS [EventTime]
				,LTRIM(RTRIM(ISNULL(t.[object_name], N'?')))   AS [object_name]
				,LTRIM(RTRIM(ISNULL(t.[counter_name], N'?')))  AS [counter_name]
				,LTRIM(RTRIM(ISNULL(t.[instance_name], N'?'))) AS [instance_name]
				,t.[cntr_value]                                AS [cntr_value]
				,t.[cntr_type]                                 AS [cntr_type]
			FROM
				[sys].[dm_os_performance_counters] t
			WHERE
				t.[object_name] IS NOT NULL
				AND t.[counter_name] IS NOT NULL
				AND (
					t.[object_name] = CASE
						WHEN (@@SERVICENAME = N'MSSQLSERVER') THEN
							'SQLServer:Access Methods'
						ELSE
							'MSSQL$' + RTRIM(@@SERVICENAME) + N':Access Methods'
					END

					OR

					t.[object_name] = CASE
						WHEN (@@SERVICENAME = N'MSSQLSERVER') THEN
							N'SQLServer:Buffer Manager'
						ELSE
							N'MSSQL$' + RTRIM(@@SERVICENAME) + N':Buffer Manager'
					END

					OR

					t.[object_name] = CASE
						WHEN (@@SERVICENAME = N'MSSQLSERVER') THEN
							N'SQLServer:General Statistics'
						ELSE
							N'MSSQL$' + RTRIM(@@SERVICENAME) + N':General Statistics'
					END

					OR

					t.[object_name] = CASE
						WHEN (@@SERVICENAME = N'MSSQLSERVER') THEN
							N'SQLServer:Locks'
						ELSE
							N'MSSQL$' + RTRIM(@@SERVICENAME) + N':Locks'
					END

					OR

					t.[object_name] = CASE
						WHEN (@@SERVICENAME = N'MSSQLSERVER') THEN
							N'SQLServer:SQL Statistics'
						ELSE
							N'MSSQL$' + RTRIM(@@SERVICENAME) + N':SQL Statistics'
					END
				)
			;
		</sql-select-text>
		<sqlite_statements>
			<sqlite_statement id="13">
				INSERT INTO [hist].[h_ServerInstance]
				(
					 [d_Query_id]
					,[d_ServerInstance_id]
					,[ServerInstanceName]
					,[ConnectionName]
				)
				SELECT
					 MIN(dQ.[rowid])
					,MIN(dQ.[d_ServerInstance_id])
					,dSI.[ServerInstanceName]
					,MIN(IFNULL(dSI.[ConnectionName], ''))
				FROM
					[d_Query] dQ
					INNER JOIN [d_ServerInstance] dSI ON
						dSI.[rowid] = dQ.[d_ServerInstance_id]
					LEFT OUTER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[ServerInstanceName] = dSI.[ServerInstanceName]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND dSI.[ServerInstanceName] IS NOT NULL
					AND hSI.[rowid] IS NULL
				GROUP BY
					dSI.[ServerInstanceName]
				;
			</sqlite_statement>
			<sqlite_statement id="14">
				UPDATE [hist].[h_ServerInstance] SET
					 [d_Query_id] = @d_Query_id
					,[d_ServerInstance_id] = (
						SELECT
							MIN(dQ.[d_ServerInstance_id])
						FROM
							[d_Query] dQ
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dQ.[d_ServerInstance_id] IS NOT NULL
					)
				WHERE
					[ServerInstanceName] = (
						SELECT
							MIN(dSI.[ServerInstanceName])
						FROM
							[d_Query] dQ
							INNER JOIN [d_ServerInstance] dSI ON
								dSI.[rowid] = dQ.[d_ServerInstance_id]
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dSI.[ServerInstanceName] IS NOT NULL
					) AND [d_ServerInstance_id] != (
						SELECT
							MIN(dQ.[d_ServerInstance_id])
						FROM
							[d_Query] dQ
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dQ.[d_ServerInstance_id] IS NOT NULL
					)
				;
			</sqlite_statement>
			<sqlite_statement id="21">
				INSERT INTO [hist].[h_InstanceOSPerformanceCounterObjects]
				(
					 [d_Query_id]
					,[h_ServerInstance_id]
					,[ObjectId]
					,[ObjectName]
				)
				SELECT
					 dQ.[rowid]
					,hSI.[rowid]
					,0
					,t.[object_name]
				FROM
					[d_Query] dQ
					INNER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
					INNER JOIN [report].[${GetInstanceOSPerformanceCounters}$_${1}$] t ON
						t.[d_Query_id] = dQ.[rowid]
					LEFT OUTER JOIN [hist].[h_InstanceOSPerformanceCounterObjects] hIOPCO ON
						hIOPCO.[h_ServerInstance_id] = hSI.[rowid]
						AND hIOPCO.[ObjectName] = t.[object_name]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND hIOPCO.[rowid] IS NULL
				GROUP BY
					 dQ.[rowid]
					,hSI.[rowid]
					,t.[object_name]
				;
			</sqlite_statement>
			<sqlite_statement id="31">
				INSERT INTO [hist].[h_InstanceOSPerformanceCounterCounters]
				(
					 [d_Query_id]
					,[h_ServerInstance_id]
					,[ObjectId]
					,[CounterId]
					,[CounterName]
				)
				SELECT
					 dQ.[rowid]
					,hSI.[rowid]
					,hIOPCO.[ObjectId]
					,0
					,t.[counter_name]
				FROM
					[d_Query] dQ
					INNER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
					INNER JOIN [report].[${GetInstanceOSPerformanceCounters}$_${1}$] t ON
						t.[d_Query_id] = dQ.[rowid]
					INNER JOIN [hist].[h_InstanceOSPerformanceCounterObjects] hIOPCO ON
						hIOPCO.[h_ServerInstance_id] = hSI.[rowid]
						AND hIOPCO.[ObjectName] = t.[object_name]
					LEFT OUTER JOIN [hist].[h_InstanceOSPerformanceCounterCounters] hIOPCC ON
						hIOPCC.[h_ServerInstance_id] = hSI.[rowid]
						AND hIOPCC.[ObjectId] = hIOPCO.[ObjectId]
						AND hIOPCC.[CounterName] = t.[counter_name]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND hIOPCC.[rowid] IS NULL
				GROUP BY
					 dQ.[rowid]
					,hSI.[rowid]
					,hIOPCO.[ObjectId]
					,t.[counter_name]
				;
			</sqlite_statement>
			<sqlite_statement id="41">
				INSERT INTO [hist].[h_InstanceOSPerformanceCounterInstances]
				(
					 [d_Query_id]
					,[h_ServerInstance_id]
					,[ObjectId]
					,[InstanceId]
					,[InstanceName]
				)
				SELECT
					 dQ.[rowid]
					,hSI.[rowid]
					,hIOPCO.[ObjectId]
					,0
					,t.[instance_name]
				FROM
					[d_Query] dQ
					INNER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
					INNER JOIN [report].[${GetInstanceOSPerformanceCounters}$_${1}$] t ON
						t.[d_Query_id] = dQ.[rowid]
					INNER JOIN [hist].[h_InstanceOSPerformanceCounterObjects] hIOPCO ON
						hIOPCO.[h_ServerInstance_id] = hSI.[rowid]
						AND hIOPCO.[ObjectName] = t.[object_name]
					LEFT OUTER JOIN [hist].[h_InstanceOSPerformanceCounterInstances] hIOPCI ON
						hIOPCI.[h_ServerInstance_id] = hSI.[rowid]
						AND hIOPCI.[ObjectId] = hIOPCO.[ObjectId]
						AND hIOPCI.[InstanceName] = t.[instance_name]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND hIOPCI.[rowid] IS NULL
				GROUP BY
					 dQ.[rowid]
					,hSI.[rowid]
					,hIOPCO.[ObjectId]
					,t.[instance_name]
				;
			</sqlite_statement>
			<sqlite_statement id="51">
				INSERT INTO [hist].[h_InstanceOSPerformanceCounters]
				(
					 [d_Query_id]
					,[h_ServerInstance_id]
					,[ObjectId]
					,[CounterId]
					,[InstanceId]
					,[CounterType]
					,[EventDay]
					,[EventTime]
					,[CounterValue]
					,[EventTimeLast]
					,[CounterValueLast]
				)
				SELECT
					 dQ.[rowid]
					,hSI.[rowid]
					,hIOPCO.[ObjectId]
					,hIOPCC.[CounterId]
					,hIOPCI.[InstanceId]
					,t.[cntr_type]
					,date(t.[EventTime])
					,t.[EventTime]
					,t.[cntr_value]
					,ifnull(hIOPCBL.[EventTime], t.[EventTime])
					,ifnull(hIOPCBL.[CounterValue], t.[cntr_value])
				FROM
					[d_Query] dQ
					INNER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
					INNER JOIN [report].[${GetInstanceOSPerformanceCounters}$_${1}$] t ON
						t.[d_Query_id] = dQ.[rowid]
					INNER JOIN [hist].[h_InstanceOSPerformanceCounterObjects] hIOPCO ON
						hIOPCO.[h_ServerInstance_id] = hSI.[rowid]
						AND hIOPCO.[ObjectName] = t.[object_name]
					INNER JOIN [hist].[h_InstanceOSPerformanceCounterCounters] hIOPCC ON
						hIOPCC.[h_ServerInstance_id] = hSI.[rowid]
						AND hIOPCC.[ObjectId] = hIOPCO.[ObjectId]
						AND hIOPCC.[CounterName] = t.[counter_name]
					INNER JOIN [hist].[h_InstanceOSPerformanceCounterInstances] hIOPCI ON
						hIOPCI.[h_ServerInstance_id] = hSI.[rowid]
						AND hIOPCI.[ObjectId] = hIOPCO.[ObjectId]
						AND hIOPCI.[InstanceName] = t.[instance_name]
					LEFT OUTER JOIN [hist].[h_InstanceOSPerformanceCounters] hIOPC ON
						hIOPC.[h_ServerInstance_id] = hSI.[rowid]
						AND hIOPC.[ObjectId] = hIOPCO.[ObjectId]
						AND hIOPC.[CounterId] = hIOPCC.[CounterId]
						AND hIOPC.[InstanceId] = hIOPCI.[InstanceId]
						AND hIOPC.[EventTime] = t.[EventTime]
						AND hIOPC.[CounterValue] = t.[cntr_value]
						AND hIOPC.[CounterType] = t.[cntr_type]
					LEFT OUTER JOIN [hist].[h_InstanceOSPerformanceCountersBaseline] hIOPCBL ON
						hIOPCBL.[h_ServerInstance_id] = hSI.[rowid]
						AND hIOPCBL.[ObjectId] = hIOPCO.[ObjectId]
						AND hIOPCBL.[CounterId] = hIOPCC.[CounterId]
						AND hIOPCBL.[InstanceId] = hIOPCI.[InstanceId]
						AND hIOPCBL.[CounterType] = t.[cntr_type]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND hIOPC.[rowid] IS NULL
				;
			</sqlite_statement>
			<sqlite_statement id="61">
				INSERT OR REPLACE INTO [hist].[h_InstanceOSPerformanceCountersBaseline]
				(
					 [d_Query_id]
					,[h_ServerInstance_id]
					,[ObjectId]
					,[CounterId]
					,[InstanceId]
					,[EventTime]
					,[CounterValue]
					,[CounterType]
				)
				SELECT
					 dQ.[rowid]
					,hSI.[rowid]
					,hIOPCO.[ObjectId]
					,hIOPCC.[CounterId]
					,hIOPCI.[InstanceId]
					,t.[EventTime]
					,t.[cntr_value]
					,t.[cntr_type]
				FROM
					[d_Query] dQ
					INNER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
					INNER JOIN [report].[${GetInstanceOSPerformanceCounters}$_${1}$] t ON
						t.[d_Query_id] = dQ.[rowid]
					INNER JOIN [hist].[h_InstanceOSPerformanceCounterObjects] hIOPCO ON
						hIOPCO.[h_ServerInstance_id] = hSI.[rowid]
						AND hIOPCO.[ObjectName] = t.[object_name]
					INNER JOIN [hist].[h_InstanceOSPerformanceCounterCounters] hIOPCC ON
						hIOPCC.[h_ServerInstance_id] = hSI.[rowid]
						AND hIOPCC.[ObjectId] = hIOPCO.[ObjectId]
						AND hIOPCC.[CounterName] = t.[counter_name]
					INNER JOIN [hist].[h_InstanceOSPerformanceCounterInstances] hIOPCI ON
						hIOPCI.[h_ServerInstance_id] = hSI.[rowid]
						AND hIOPCI.[ObjectId] = hIOPCO.[ObjectId]
						AND hIOPCI.[InstanceName] = t.[instance_name]
				WHERE
					dQ.[rowid] = @d_Query_id
				;
			</sqlite_statement>
		</sqlite_statements>
	</sql-select>
</sqlquery>
</root>
