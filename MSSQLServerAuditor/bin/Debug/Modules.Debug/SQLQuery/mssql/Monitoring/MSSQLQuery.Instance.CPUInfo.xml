<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<sqlquery type="MSSQL">
	<sql-select name="GetInstanceCPUUtilization">
		<description>
			This script will display CPU usage on the server. The data comes from dm_os_ring_buffers
			which only stored data for the past 4 HOURS. Within the ring buffers, data is averaged
			at the minute level. There are variables limit the results to a smaller time window and
			for hiding the details.
		</description>
		<reference>
			http://www.sqlservercentral.com/Forums/Topic611107-146-2.aspx
		</reference>
		<reference>
			http://social.msdn.microsoft.com/Forums/en-US/sqldatabaseengine/thread/abbf67ab-fc8b-4567-b6d4-1c605bc9866c/
		</reference>
		<reference>
			https://www.simple-talk.com/content/print.aspx?article=1544
		</reference>
		<sql-select-text MinSupportedVersion="9.*" MaxSupportedVersion="9.0.2046" signature="">
			SET NOCOUNT ON;
			SET DEADLOCK_PRIORITY LOW;

			SELECT
				 y.[RecordEventTime]                           AS [EventTime]
				,y.[RecordTimeStamp]                           AS [RecordTimeStamp]
				,y.[RingBufferType]                            AS [RecordRingBufferType]
				,y.[MemoryUtilization]                         AS [MemoryUtilization]
				,y.[SystemIdle]                                AS [SystemIdle]
				,y.[ProcessUtilization]                        AS [SQLProcessCPUUtilization]
				,100 - y.[SystemIdle] - y.[ProcessUtilization] AS [OtherProcessesCPUUtilization]
			FROM
				(
					SELECT
						 x.[RecordEventTime]                                                                                 AS [RecordEventTime]
						,x.[RecordTimeStamp]                                                                                 AS [RecordTimeStamp]
						,x.[RingBufferType]                                                                                  AS [RingBufferType]
						,XMLRecord.value('(//Record/@id)[1]', '[INTEGER]')                                                   AS [RecordId]
						,XMLRecord.value('(//Record/@type)[1]', '[NVARCHAR](128)')                                           AS [RecordType]
						,XMLRecord.value('(//Record/@time)[1]', '[BIGINT]')                                                  AS [RecordTime]
						,XMLRecord.value('(./Record/SchedluerMonitorEvent/SystemHealth/SystemIdle)[1]', '[INTEGER]')         AS [SystemIdle]
						,XMLRecord.value('(./Record/SchedluerMonitorEvent/SystemHealth/ProcessUtilization)[1]', '[INTEGER]') AS [ProcessUtilization]
						,XMLRecord.value('(./Record/SchedluerMonitorEvent/SystemHealth/MemoryUtilization)[1]', '[BIGINT]')   AS [MemoryUtilization]
					FROM (
						SELECT
							 DATEADD(ms, t.[timestamp] - tSDOSI.[ms_ticks], GETDATE()) AS [RecordEventTime]
							,t.[timestamp]                                             AS [RecordTimeStamp]
							,t.[ring_buffer_type]                                      AS [RingBufferType]
							,CONVERT(XML, t.[record])                                  AS [XMLRecord]
						FROM
							[sys].[dm_os_ring_buffers] t
							CROSS JOIN [sys].[dm_os_sys_info] AS tSDOSI
						WHERE
							t.[ring_buffer_type] = N'RING_BUFFER_SCHEDULER_MONITOR'
							AND t.[record] LIKE '% %'
							AND (tSDOSI.[ms_ticks] - t.[timestamp]) &lt; 2147483647
					) AS x
				) AS y
			ORDER BY
				1 ASC
			;
		</sql-select-text>
		<sql-select-text MinSupportedVersion="9.0.2047" MaxSupportedVersion="9.*" signature="">
			SET NOCOUNT ON;
			SET DEADLOCK_PRIORITY LOW;

			SELECT
				 y.[RecordEventTime]                           AS [EventTime]
				,y.[RecordTimeStamp]                           AS [RecordTimeStamp]
				,y.[RingBufferType]                            AS [RecordRingBufferType]
				,y.[MemoryUtilization]                         AS [MemoryUtilization]
				,y.[SystemIdle]                                AS [SystemIdle]
				,y.[ProcessUtilization]                        AS [SQLProcessCPUUtilization]
				,100 - y.[SystemIdle] - y.[ProcessUtilization] AS [OtherProcessesCPUUtilization]
			FROM
				(
					SELECT
						 x.[RecordEventTime]                                                                                 AS [RecordEventTime]
						,x.[RecordTimeStamp]                                                                                 AS [RecordTimeStamp]
						,x.[RingBufferType]                                                                                  AS [RingBufferType]
						,XMLRecord.value('(//Record/@id)[1]', '[INTEGER]')                                                   AS [RecordId]
						,XMLRecord.value('(//Record/@type)[1]', '[NVARCHAR](128)')                                           AS [RecordType]
						,XMLRecord.value('(//Record/@time)[1]', '[BIGINT]')                                                  AS [RecordTime]
						,XMLRecord.value('(./Record/SchedulerMonitorEvent/SystemHealth/SystemIdle)[1]', '[INTEGER]')         AS [SystemIdle]
						,XMLRecord.value('(./Record/SchedulerMonitorEvent/SystemHealth/ProcessUtilization)[1]', '[INTEGER]') AS [ProcessUtilization]
						,XMLRecord.value('(./Record/SchedulerMonitorEvent/SystemHealth/MemoryUtilization)[1]', '[BIGINT]')   AS [MemoryUtilization]
					FROM (
						SELECT
							 DATEADD(ms, t.[timestamp] - tSDOSI.[ms_ticks], GETDATE()) AS [RecordEventTime]
							,t.[timestamp]                                             AS [RecordTimeStamp]
							,t.[ring_buffer_type]                                      AS [RingBufferType]
							,CONVERT(XML, t.[record])                                  AS [XMLRecord]
						FROM
							[sys].[dm_os_ring_buffers] t
							CROSS JOIN [sys].[dm_os_sys_info] AS tSDOSI
						WHERE
							t.[ring_buffer_type] = N'RING_BUFFER_SCHEDULER_MONITOR'
							AND t.[record] LIKE '% %'
							AND (tSDOSI.[ms_ticks] - t.[timestamp]) &lt; 2147483647
					) AS x
				) AS y
			ORDER BY
				1 ASC
			;
		</sql-select-text>
		<sql-select-text MinSupportedVersion="10.*" MaxSupportedVersion="*" signature="">
			SET NOCOUNT ON;
			SET DEADLOCK_PRIORITY LOW;

			SELECT
				 y.[RecordEventTime]                           AS [EventTime]
				,y.[RecordTimeStamp]                           AS [RecordTimeStamp]
				,y.[RingBufferType]                            AS [RecordRingBufferType]
				,y.[MemoryUtilization]                         AS [MemoryUtilization]
				,y.[SystemIdle]                                AS [SystemIdle]
				,y.[ProcessUtilization]                        AS [SQLProcessCPUUtilization]
				,100 - y.[SystemIdle] - y.[ProcessUtilization] AS [OtherProcessesCPUUtilization]
			FROM
				(
					SELECT
						 x.[RecordEventTime]                                                                                 AS [RecordEventTime]
						,x.[RecordTimeStamp]                                                                                 AS [RecordTimeStamp]
						,x.[RingBufferType]                                                                                  AS [RingBufferType]
						,XMLRecord.value('(//Record/@id)[1]', '[INTEGER]')                                                   AS [RecordId]
						,XMLRecord.value('(//Record/@type)[1]', '[NVARCHAR](128)')                                           AS [RecordType]
						,XMLRecord.value('(//Record/@time)[1]', '[BIGINT]')                                                  AS [RecordTime]
						,XMLRecord.value('(./Record/SchedulerMonitorEvent/SystemHealth/SystemIdle)[1]', '[INTEGER]')         AS [SystemIdle]
						,XMLRecord.value('(./Record/SchedulerMonitorEvent/SystemHealth/ProcessUtilization)[1]', '[INTEGER]') AS [ProcessUtilization]
						,XMLRecord.value('(./Record/SchedulerMonitorEvent/SystemHealth/MemoryUtilization)[1]', '[BIGINT]')   AS [MemoryUtilization]
					FROM (
						SELECT
							 DATEADD(ms, t.[timestamp] - tSDOSI.[ms_ticks], GETDATE()) AS [RecordEventTime]
							,t.[timestamp]                                             AS [RecordTimeStamp]
							,t.[ring_buffer_type]                                      AS [RingBufferType]
							,CONVERT(XML, t.[record])                                  AS [XMLRecord]
						FROM
							[sys].[dm_os_ring_buffers] t
							CROSS JOIN [sys].[dm_os_sys_info] AS tSDOSI
						WHERE
							t.[ring_buffer_type] = N'RING_BUFFER_SCHEDULER_MONITOR'
							AND t.[record] LIKE '% %'
							AND (tSDOSI.[ms_ticks] - t.[timestamp]) &lt; 2147483647
					) AS x
				) AS y
			ORDER BY
				1 ASC
			;
		</sql-select-text>
		<sqlite_statements>
			<sqlite_statement id="13">
				INSERT INTO [hist].[h_ServerInstance]
				(
					 [d_Query_id]
					,[d_ServerInstance_id]
					,[ServerInstanceName]
					,[ConnectionName]
				)
				SELECT
					 MIN(dQ.[rowid])
					,MIN(dQ.[d_ServerInstance_id])
					,dSI.[ServerInstanceName]
					,MIN(IFNULL(dSI.[ConnectionName], ''))
				FROM
					[d_Query] dQ
					INNER JOIN [d_ServerInstance] dSI ON
						dSI.[rowid] = dQ.[d_ServerInstance_id]
					LEFT OUTER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[ServerInstanceName] = dSI.[ServerInstanceName]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND dSI.[ServerInstanceName] IS NOT NULL
					AND hSI.[rowid] IS NULL
				GROUP BY
					dSI.[ServerInstanceName]
				;
			</sqlite_statement>
			<sqlite_statement id="14">
				UPDATE [hist].[h_ServerInstance] SET
					 [d_Query_id] = @d_Query_id
					,[d_ServerInstance_id] = (
						SELECT
							MIN(dQ.[d_ServerInstance_id])
						FROM
							[d_Query] dQ
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dQ.[d_ServerInstance_id] IS NOT NULL
					)
				WHERE
					[ServerInstanceName] = (
						SELECT
							MIN(dSI.[ServerInstanceName])
						FROM
							[d_Query] dQ
							INNER JOIN [d_ServerInstance] dSI ON
								dSI.[rowid] = dQ.[d_ServerInstance_id]
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dSI.[ServerInstanceName] IS NOT NULL
					) AND [d_ServerInstance_id] != (
						SELECT
							MIN(dQ.[d_ServerInstance_id])
						FROM
							[d_Query] dQ
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dQ.[d_ServerInstance_id] IS NOT NULL
					)
				;
			</sqlite_statement>
			<sqlite_statement id="31">
				INSERT INTO [hist].[h_InstanceCPUUtilization]
				(
					 [d_Query_id]
					,[h_ServerInstance_id]
					,[EventDay]
					,[EventTime]
					,[RecordTimeStamp]
					,[RecordRingBufferType]
					,[MemoryUtilization]
					,[SystemIdle]
					,[SQLProcessCPUUtilization]
					,[OtherProcessesCPUUtilization]
				)
				SELECT
					 dQ.[rowid]
					,hSI.[rowid]
					,date(t.[EventTime])
					,t.[EventTime]
					,t.[RecordTimeStamp]
					,t.[RecordRingBufferType]
					,t.[MemoryUtilization]
					,t.[SystemIdle]
					,t.[SQLProcessCPUUtilization]
					,t.[OtherProcessesCPUUtilization]
				FROM
					[d_Query] dQ
					INNER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
					INNER JOIN [report].[${GetInstanceCPUUtilization}$_${1}$] t ON
						t.[d_Query_id] = dQ.[rowid]
					LEFT OUTER JOIN [hist].[h_InstanceCPUUtilization] hGICU ON
						hGICU.[h_ServerInstance_id] = hSI.[rowid]
						AND hGICU.[RecordTimeStamp] = t.[RecordTimeStamp]
						AND hGICU.[RecordRingBufferType] = t.[RecordRingBufferType]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND hGICU.[rowid] IS NULL
				;
			</sqlite_statement>
			<sqlite_statement id="32">
				UPDATE [hist].[h_InstanceCPUUtilization] SET
					[DateUpdated] = (
						SELECT
							DATETIME('now')
						FROM
							[d_Query] dQ
							INNER JOIN [hist].[h_ServerInstance] hSI ON
								hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
							INNER JOIN [report].[${GetInstanceCPUUtilization}$_${1}$] t ON
								t.[d_Query_id] = dQ.[rowid]
						WHERE
							dQ.[rowid] = @d_Query_id
							AND t.[RecordTimeStamp] = [hist].[h_InstanceCPUUtilization].[RecordTimeStamp]
							AND t.[RecordRingBufferType] = [hist].[h_InstanceCPUUtilization].[RecordRingBufferType]
					)
				WHERE
					EXISTS (
						SELECT
							1
						FROM
							[d_Query] dQ
							INNER JOIN [hist].[h_ServerInstance] hSI ON
								hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
							INNER JOIN [report].[${GetInstanceCPUUtilization}$_${1}$] t ON
								t.[d_Query_id] = dQ.[rowid]
						WHERE
							dQ.[rowid] = @d_Query_id
							AND t.[RecordTimeStamp] = [hist].[h_InstanceCPUUtilization].[RecordTimeStamp]
							AND t.[RecordRingBufferType] = [hist].[h_InstanceCPUUtilization].[RecordRingBufferType]
					)
				;
			</sqlite_statement>
		</sqlite_statements>
	</sql-select>
</sqlquery>
</root>
