<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:xi="http://www.w3.org/2003/XInclude">
<sqlquery type="ActiveDirectory">
	<sql-select name="GetActiveDirectoryPersonUsers">
		<name>
			GetActiveDirectoryPersonUsers
		</name>
		<description>
			all user objects that are designated as a "person"
		</description>
		<reference>
			http://www.techgalaxy.net/Docs/Scripts/LDAPqueries.htm
		</reference>
		<sql-select-text MinSupportedVersion="*" MaxSupportedVersion="*" signature="">
			(&amp;(objectCategory=Person)(objectClass=User)@FilterExpression@additionalFilterExpression);@fields;@scope
		</sql-select-text>
		<sql-select-parameters>
			<sql-select-parameter name="@FilterExpression"           type="NVarChar" />
			<sql-select-parameter name="@additionalFilterExpression" type="NVarChar" />
			<sql-select-parameter name="@fields"                     type="NVarChar" />
			<sql-select-parameter name="@scope"                      type="NVarChar" />
		</sql-select-parameters>
	</sql-select>

	<sql-select name="GetActiveDirectoryGroupGroup">
		<name>
			GetActiveDirectoryGroupGroup
		</name>
		<description>
			all active directory groups objects
		</description>
		<reference>
			http://www.techgalaxy.net/Docs/Scripts/LDAPqueries.htm
		</reference>
		<sql-select-text MinSupportedVersion="*" MaxSupportedVersion="*" signature="">
			(&amp;(objectCategory=Group)(objectClass=Group)@FilterExpression@additionalFilterExpression);@fields;@scope
		</sql-select-text>
		<sql-select-parameters>
			<sql-select-parameter name="@FilterExpression"           type="NVarChar" />
			<sql-select-parameter name="@additionalFilterExpression" type="NVarChar" />
			<sql-select-parameter name="@fields"                     type="NVarChar" />
			<sql-select-parameter name="@scope"                      type="NVarChar" />
		</sql-select-parameters>
		<sqlite_statements>
			<sqlite_statement id="13">
				INSERT INTO [hist].[h_ServerInstance]
				(
					 [d_Query_id]
					,[d_ServerInstance_id]
					,[ServerInstanceName]
					,[ConnectionName]
				)
				SELECT
					 MIN(dQ.[rowid])
					,MIN(dQ.[d_ServerInstance_id])
					,dSI.[ServerInstanceName]
					,MIN(IFNULL(dSI.[ConnectionName], ''))
				FROM
					[d_Query] dQ
					INNER JOIN [d_ServerInstance] dSI ON
						dSI.[rowid] = dQ.[d_ServerInstance_id]
					LEFT OUTER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[ServerInstanceName] = dSI.[ServerInstanceName]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND dSI.[ServerInstanceName] IS NOT NULL
					AND hSI.[rowid] IS NULL
				GROUP BY
					dSI.[ServerInstanceName]
				;
			</sqlite_statement>
			<sqlite_statement id="14">
				UPDATE [hist].[h_ServerInstance] SET
					 [d_Query_id] = @d_Query_id
					,[d_ServerInstance_id] = (
						SELECT
							MIN(dQ.[d_ServerInstance_id])
						FROM
							[d_Query] dQ
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dQ.[d_ServerInstance_id] IS NOT NULL
					)
				WHERE
					[ServerInstanceName] = (
						SELECT
							MIN(dSI.[ServerInstanceName])
						FROM
							[d_Query] dQ
							INNER JOIN [d_ServerInstance] dSI ON
								dSI.[rowid] = dQ.[d_ServerInstance_id]
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dSI.[ServerInstanceName] IS NOT NULL
					) AND [d_ServerInstance_id] != (
						SELECT
							MIN(dQ.[d_ServerInstance_id])
						FROM
							[d_Query] dQ
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dQ.[d_ServerInstance_id] IS NOT NULL
					)
				;
			</sqlite_statement>
			<sqlite_statement id="31">
				DELETE FROM [hist].[h_ldap_Groups]
				WHERE
					[h_ServerInstance_id] = (
						SELECT
							hSI.[rowid]
						FROM
							[d_Query] dQ
							INNER JOIN [hist].[h_ServerInstance] hSI ON
								hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
						WHERE
							dQ.[rowid] = @d_Query_id
						GROUP BY
							hSI.[rowid]
					)
				;
			</sqlite_statement>
			<sqlite_statement id="32">
				INSERT INTO [hist].[h_ldap_Groups]
				(
					 [d_Query_id]
					,[h_ServerInstance_id]
					,[GroupName]
					,[DistinguishedGroupName]
					,[isActive]
				)
				SELECT
					 dQ.[rowid]
					,hSI.[rowid]
					,trim(t.[Name])
					,trim(t.[DistinguishedName])
					,1
				FROM
					[d_Query] dQ
					INNER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
					INNER JOIN [report].[${GetActiveDirectoryGroupGroup}$_${1}$] t ON
						t.[d_Query_id] = dQ.[rowid]
					LEFT OUTER JOIN [hist].[h_ldap_Groups] hLG ON
						hLG.[h_ServerInstance_id] = hSI.[rowid]
						AND trim(hLG.[GroupName]) = t.[Name]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND hLG.[rowid] IS NULL
					AND t.[Name] IS NOT NULL
					AND length(trim(t.[Name])) &gt; 0
					AND t.[DistinguishedName] IS NOT NULL
					AND length(trim(t.[DistinguishedName])) &gt; 0
				GROUP BY
					 dQ.[rowid]
					,hSI.[rowid]
					,trim(t.[Name])
					,trim(t.[DistinguishedName])
				;
			</sqlite_statement>
		</sqlite_statements>
	</sql-select>

	<sql-select name="GetActiveDirectoryPersonUsersByGroup">
		<name>
			GetActiveDirectoryPersonUsers
		</name>
		<description>
			all user objects that are designated as a "person"
		</description>
		<reference>
			http://www.techgalaxy.net/Docs/Scripts/LDAPqueries.htm
		</reference>
		<sql-select-text MinSupportedVersion="*" MaxSupportedVersion="*" signature="">
			(&amp;(objectCategory=Person)(objectClass=User)(memberof=@DistinguishedGroupName)@FilterExpression@additionalFilterExpression);@fields;@scope
		</sql-select-text>
		<sql-select-parameters>
			<sql-select-parameter name="@FilterExpression"           type="NVarChar" />
			<sql-select-parameter name="@additionalFilterExpression" type="NVarChar" />
			<sql-select-parameter name="@fields"                     type="NVarChar" />
			<sql-select-parameter name="@scope"                      type="NVarChar" />
			<sql-select-parameter name="@DistinguishedGroupName"     type="NVarChar" />
		</sql-select-parameters>
	</sql-select>

</sqlquery>
</root>
