<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<sqlquery type="MSSQL">
	<sql-select name="GetInstanceMostExpensiveQueriesByReads">
		<sql-select-text MinSupportedVersion="9.*" MaxSupportedVersion="*" signature="">
			SET NOCOUNT ON;
			SET DEADLOCK_PRIORITY LOW;

			SELECT TOP (@intNumberOfRowsToShow)
				SUBSTRING(qt.[TEXT], (qs.[statement_start_offset] / 2) + 1,
				((CASE qs.[statement_end_offset]
					WHEN -1 THEN
						DATALENGTH(qt.[TEXT])
					ELSE
						qs.[statement_end_offset]
				END - qs.[statement_start_offset])/2)+1) AS [query_text]
				,qs.[execution_count]                    AS [execution_count]
				,qs.[total_logical_reads]                AS [total_logical_reads]
				,qs.[last_logical_reads]                 AS [last_logical_reads]
				,qs.[total_logical_writes]               AS [total_logical_writes]
				,qs.[last_logical_writes]                AS [last_logical_writes]
				,qs.[total_worker_time]                  AS [total_worker_time]
				,qs.[last_worker_time]                   AS [last_worker_time]
				,qs.[total_elapsed_time] / 1000000       AS [total_elapsed_time_in_Seconds]
				,qs.[last_elapsed_time] / 1000000        AS [last_elapsed_time_in_Seconds]
				,qs.[last_execution_time]                AS [last_execution_time]
				,tMSSD.[name]                            AS [DatabaseName]
			FROM
				[sys].[dm_exec_query_stats] qs
				CROSS APPLY [sys].[dm_exec_sql_text](qs.[sql_handle]) qt
				LEFT OUTER JOIN [master].[sys].[sysdatabases] tMSSD ON
					tMSSD.[dbid] = qt.[dbid]
			ORDER BY
				qs.[total_logical_reads] DESC;
		</sql-select-text>
		<sql-select-parameters>
			<sql-select-parameter name="@intNumberOfRowsToShow" type="Int" />
		</sql-select-parameters>
	</sql-select>

	<sql-select name="GetInstanceMostExpensiveQueriesByWrites">
		<sql-select-text MinSupportedVersion="9.*" MaxSupportedVersion="*" signature="">
			SET NOCOUNT ON;
			SET DEADLOCK_PRIORITY LOW;

			SELECT TOP (@intNumberOfRowsToShow)
				SUBSTRING(qt.[TEXT], (qs.[statement_start_offset] / 2) + 1,
				((CASE qs.[statement_end_offset]
					WHEN -1 THEN
						DATALENGTH(qt.[TEXT])
					ELSE
						qs.[statement_end_offset]
				END - qs.[statement_start_offset])/2)+1) AS [query_text]
				,qs.[execution_count]                    AS [execution_count]
				,qs.[total_logical_reads]                AS [total_logical_reads]
				,qs.[last_logical_reads]                 AS [last_logical_reads]
				,qs.[total_logical_writes]               AS [total_logical_writes]
				,qs.[last_logical_writes]                AS [last_logical_writes]
				,qs.[total_worker_time]                  AS [total_worker_time]
				,qs.[last_worker_time]                   AS [last_worker_time]
				,qs.[total_elapsed_time] / 1000000       AS [total_elapsed_time_in_Seconds]
				,qs.[last_elapsed_time] / 1000000        AS [last_elapsed_time_in_Seconds]
				,qs.[last_execution_time]                AS [last_execution_time]
				,tMSSD.[name]                            AS [DatabaseName]
			FROM
				[sys].[dm_exec_query_stats] qs
				CROSS APPLY [sys].[dm_exec_sql_text](qs.[sql_handle]) qt
				LEFT OUTER JOIN [master].[sys].[sysdatabases] tMSSD ON
					tMSSD.[dbid] = qt.[dbid]
			ORDER BY
				qs.[total_logical_writes] DESC;
		</sql-select-text>
		<sql-select-parameters>
			<sql-select-parameter name="@intNumberOfRowsToShow" type="Int" />
		</sql-select-parameters>
	</sql-select>

	<sql-select name="GetInstanceMostExpensiveQueriesByTime">
		<sql-select-text MinSupportedVersion="9.*" MaxSupportedVersion="*" signature="">
			SET NOCOUNT ON;
			SET DEADLOCK_PRIORITY LOW;

			SELECT TOP (@intNumberOfRowsToShow)
				SUBSTRING(qt.[TEXT], (qs.[statement_start_offset] / 2) + 1,
				((CASE qs.[statement_end_offset]
					WHEN -1 THEN
						DATALENGTH(qt.[TEXT])
					ELSE
						qs.[statement_end_offset]
				END - qs.[statement_start_offset])/2)+1) AS [query_text]
				,qs.[execution_count]                    AS [execution_count]
				,qs.[total_logical_reads]                AS [total_logical_reads]
				,qs.[last_logical_reads]                 AS [last_logical_reads]
				,qs.[total_logical_writes]               AS [total_logical_writes]
				,qs.[last_logical_writes]                AS [last_logical_writes]
				,qs.[total_worker_time]                  AS [total_worker_time]
				,qs.[last_worker_time]                   AS [last_worker_time]
				,qs.[total_elapsed_time] / 1000000       AS [total_elapsed_time_in_Seconds]
				,qs.[last_elapsed_time] / 1000000        AS [last_elapsed_time_in_Seconds]
				,qs.[last_execution_time]                AS [last_execution_time]
				,tMSSD.[name]                            AS [DatabaseName]
			FROM
				[sys].[dm_exec_query_stats] qs
				CROSS APPLY [sys].[dm_exec_sql_text](qs.[sql_handle]) qt
				LEFT OUTER JOIN [master].[sys].[sysdatabases] tMSSD ON
					tMSSD.[dbid] = qt.[dbid]
			ORDER BY
				qs.[total_elapsed_time] DESC;
		</sql-select-text>
		<sql-select-parameters>
			<sql-select-parameter name="@intNumberOfRowsToShow" type="Int" />
		</sql-select-parameters>
	</sql-select>
</sqlquery>
</root>
