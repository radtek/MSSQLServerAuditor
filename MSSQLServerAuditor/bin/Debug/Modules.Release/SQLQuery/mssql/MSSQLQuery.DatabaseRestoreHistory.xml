<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<sqlquery type="MSSQL">
	<sql-select name="GetDatabaseRestoreHistory">
		<sql-select-text MinSupportedVersion="8.*" MaxSupportedVersion="8.*" signature="">
			SET NOCOUNT ON;
			SET DEADLOCK_PRIORITY LOW;

			SELECT TOP 1000
				 tRH.[destination_database_name]  AS [DatabaseName]
				,tRH.[restore_type]               AS [RestoreType]
				,tRH.[restore_date]               AS [RestoreDate]
				,tBS.[server_name]                AS [SourceServerName]
				,tBS.[database_name]              AS [SourceDatabaseName]
				,tBS.[backup_finish_date]         AS [SourceBackupFinishDate]
				,SUM(CASE
					WHEN (tBS.[backup_size] IS NULL) THEN
						0.0
					ELSE
						CONVERT([NUMERIC](20, 2), tBS.[backup_size] / (CONVERT([NUMERIC](20, 2), 1024.0 * 1024.0)))
				END)                              AS [SourceBackupSizeMB]
				,MIN(tBMF.[physical_device_name]) AS [SourceBackupFileName]
				,COUNT(*)                         AS [SourceBackupFilesCount]
			FROM
				[msdb].[dbo].[restorehistory] tRH
				INNER JOIN [msdb].[dbo].[backupset] tBS ON
					tBS.[backup_set_id] = tRH.[backup_set_id]
				INNER JOIN [msdb].[dbo].[backupmediafamily] tBMF ON
					tBMF.[media_set_id] = tBS.[media_set_id]
			WHERE
				tRH.[restore_date] IS NOT NULL
				AND tRH.[restore_type] = ISNULL(@chRestoreType, tRH.[restore_type])
				AND tRH.[destination_database_name] = ISNULL(@DatabaseName, tRH.[destination_database_name])
			GROUP BY
				 tRH.[destination_database_name]
				,tRH.[restore_type]
				,tRH.[restore_date]
				,tBS.[server_name]
				,tBS.[database_name]
				,tBS.[backup_finish_date]
			ORDER BY
				tRH.[restore_date] DESC
			;
		</sql-select-text>
		<sql-select-text MinSupportedVersion="9.*" MaxSupportedVersion="*" signature="">
			SET NOCOUNT ON;
			SET DEADLOCK_PRIORITY LOW;

			SELECT TOP 1000
				 tRH.[destination_database_name]  AS [DatabaseName]
				,tRH.[restore_type]               AS [RestoreType]
				,tRH.[restore_date]               AS [RestoreDate]
				,tBS.[server_name]                AS [SourceServerName]
				,tBS.[database_name]              AS [SourceDatabaseName]
				,tBS.[backup_finish_date]         AS [SourceBackupFinishDate]
				,SUM(CASE
					WHEN (tBS.[backup_size] IS NULL) THEN
						0.0
					ELSE
						CONVERT([NUMERIC](20, 2), tBS.[backup_size] / (CONVERT([NUMERIC](20, 2), 1024.0 * 1024.0)))
				END)                              AS [SourceBackupSizeMB]
				,MIN(tBMF.[physical_device_name]) AS [SourceBackupFileName]
				,COUNT(*)                         AS [SourceBackupFilesCount]
			FROM
				[msdb].[dbo].[restorehistory] tRH
				INNER JOIN [msdb].[dbo].[backupset] tBS ON
					tBS.[backup_set_id] = tRH.[backup_set_id]
				INNER JOIN [msdb].[dbo].[backupmediafamily] tBMF ON
					tBMF.[media_set_id] = tBS.[media_set_id]
			WHERE
				tRH.[restore_date] IS NOT NULL
				AND tRH.[restore_type] = ISNULL(@chRestoreType, tRH.[restore_type])
				AND tRH.[destination_database_name] = ISNULL(@DatabaseName, tRH.[destination_database_name])
			GROUP BY
				 tRH.[destination_database_name]
				,tRH.[restore_type]
				,tRH.[restore_date]
				,tBS.[server_name]
				,tBS.[database_name]
				,tBS.[backup_finish_date]
			ORDER BY
				tRH.[restore_date] DESC
			;
		</sql-select-text>
		<sql-select-parameters>
			<sql-select-parameter name="@chRestoreType" type="NChar" />
			<sql-select-parameter name="@DatabaseName" type="NVarChar" />
		</sql-select-parameters>
	</sql-select>
</sqlquery>
</root>

