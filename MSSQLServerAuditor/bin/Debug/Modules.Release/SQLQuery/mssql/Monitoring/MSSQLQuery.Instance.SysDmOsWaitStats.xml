<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<sqlquery type="MSSQL">
	<sql-select name="GetSysDmOsWaitStats">
		<name>
			sys.dm_os_wait_stats
		</name>
		<reference>
			http://www.mssqltips.com/sqlservertip/2329/how-to-identify-io-bottlenecks-in-ms-sql-server/
		</reference>
		<sql-select-text MinSupportedVersion="9.*" MaxSupportedVersion="*" signature="">
			SET NOCOUNT ON;
			SET DEADLOCK_PRIORITY LOW;

			SELECT
				 getdate()        AS [EventTime]
				,t.[wait_type]    AS [WaitType]
				,t.[wait_time_ms] AS [WaitTimeMs]
			FROM
				[sys].[dm_os_wait_stats] t
			WHERE
				t.[wait_type] IS NOT NULL
				AND t.[wait_time_ms] IS NOT NULL
				AND t.[wait_time_ms] &gt; 0
			;
		</sql-select-text>
		<sqlite_statements>
			<sqlite_statement id="13">
				INSERT INTO [hist].[h_ServerInstance]
				(
					 [d_Query_id]
					,[d_ServerInstance_id]
					,[ServerInstanceName]
					,[ConnectionName]
				)
				SELECT
					 MIN(dQ.[rowid])
					,MIN(dQ.[d_ServerInstance_id])
					,dSI.[ServerInstanceName]
					,MIN(IFNULL(dSI.[ConnectionName], ''))
				FROM
					[d_Query] dQ
					INNER JOIN [d_ServerInstance] dSI ON
						dSI.[rowid] = dQ.[d_ServerInstance_id]
					LEFT OUTER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[ServerInstanceName] = dSI.[ServerInstanceName]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND dSI.[ServerInstanceName] IS NOT NULL
					AND hSI.[rowid] IS NULL
				GROUP BY
					dSI.[ServerInstanceName]
				;
			</sqlite_statement>
			<sqlite_statement id="14">
				UPDATE [hist].[h_ServerInstance] SET
					 [d_Query_id] = @d_Query_id
					,[d_ServerInstance_id] = (
						SELECT
							MIN(dQ.[d_ServerInstance_id])
						FROM
							[d_Query] dQ
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dQ.[d_ServerInstance_id] IS NOT NULL
					)
				WHERE
					[ServerInstanceName] = (
						SELECT
							MIN(dSI.[ServerInstanceName])
						FROM
							[d_Query] dQ
							INNER JOIN [d_ServerInstance] dSI ON
								dSI.[rowid] = dQ.[d_ServerInstance_id]
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dSI.[ServerInstanceName] IS NOT NULL
					) AND [d_ServerInstance_id] != (
						SELECT
							MIN(dQ.[d_ServerInstance_id])
						FROM
							[d_Query] dQ
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dQ.[d_ServerInstance_id] IS NOT NULL
					)
				;
			</sqlite_statement>
			<sqlite_statement id="31">
				INSERT INTO [hist].[h_SysDmOsWaitStats]
				(
					 [d_Query_id]
					,[h_ServerInstance_id]
					,[EventDay]
					,[EventTime]
					,[WaitType]
					,[WaitTimeMs]
					,[EventTimeLast]
					,[WaitTimeMsLast]
				)
				SELECT
					 dQ.[rowid]
					,hSI.[rowid]
					,date(t.[EventTime])
					,t.[EventTime]
					,t.[WaitType]
					,t.[WaitTimeMs]
					,hSDOWSB.[EventTime]
					,hSDOWSB.[WaitTimeMs]
				FROM
					[d_Query] dQ
					INNER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
					INNER JOIN [report].[${GetSysDmOsWaitStats}$_${1}$] t ON
						t.[d_Query_id] = dQ.[rowid]
					INNER JOIN [hist].[h_SysDmOsWaitStatsBaseline] hSDOWSB ON
						hSDOWSB.[h_ServerInstance_id] = hSI.[rowid]
						AND hSDOWSB.[WaitType] = t.[WaitType]
					LEFT OUTER JOIN [hist].[h_SysDmOsWaitStats] hSDOWS ON
						hSDOWS.[h_ServerInstance_id] = hSI.[rowid]
						AND hSDOWS.[WaitType] = t.[WaitType]
						AND hSDOWS.[EventTime] = t.[EventTime]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND t.[WaitTimeMs] &gt; hSDOWSB.[WaitTimeMs]
					AND hSDOWS.[rowid] IS NULL
				;
			</sqlite_statement>
			<sqlite_statement id="32">
				INSERT OR REPLACE INTO [hist].[h_SysDmOsWaitStatsBaseline]
				(
					 [d_Query_id]
					,[h_ServerInstance_id]
					,[EventDay]
					,[EventTime]
					,[WaitType]
					,[WaitTimeMs]
				)
				SELECT
					 dQ.[rowid]
					,hSI.[rowid]
					,date(t.[EventTime])
					,t.[EventTime]
					,t.[WaitType]
					,t.[WaitTimeMs]
				FROM
					[d_Query] dQ
					INNER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
					INNER JOIN [report].[${GetSysDmOsWaitStats}$_${1}$] t ON
						t.[d_Query_id] = dQ.[rowid]
					LEFT OUTER JOIN [hist].[h_SysDmOsWaitStatsBaseline] hSDOWSB ON
						hSDOWSB.[h_ServerInstance_id] = hSI.[rowid]
						AND hSDOWSB.[WaitType] = t.[WaitType]
						AND hSDOWSB.[EventTime] = t.[EventTime]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND hSDOWSB.[rowid] IS NULL
				;
			</sqlite_statement>
		</sqlite_statements>
	</sql-select>
</sqlquery>
</root>
