<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<sqlquery type="MSSQL">
	<sql-select name="GetInstanceSummaryProcesses">
		<sql-select-text MinSupportedVersion="*" MaxSupportedVersion="8.*" signature="">
			SET NOCOUNT ON;
			SET DEADLOCK_PRIORITY LOW;

			DECLARE
				@intMySpId [INTEGER]
			;

			DECLARE
				@tblProcesses TABLE
				(
					 [EventTime]  [DATETIME]      NOT NULL
					,[SpId]       [INTEGER]       NOT NULL
					,[Loginame]   [NVARCHAR](128) NOT NULL
					,[Cpu]        [BIGINT]        NOT NULL
					,[PhysicalIO] [BIGINT]        NOT NULL
					,[Blocked]    [INTEGER]       NOT NULL
					,[Status]     [NVARCHAR](128) NOT NULL
				);

			SET @intMySpId = @@spid;

			INSERT INTO @tblProcesses
			(
				 [EventTime]
				,[SpId]
				,[Loginame]
				,[Cpu]
				,[PhysicalIO]
				,[Blocked]
				,[Status]
			)
			SELECT
				 getdate()                                            AS [EventTime]
				,ISNULL(tSP.[spid], 0)                                AS [SpId]
				,LTRIM(RTRIM(ISNULL(tSP.[loginame], N'?')))           AS [Loginame]
				,SUM(ISNULL(CONVERT([BIGINT], tSP.[cpu]), 0))         AS [Cpu]
				,SUM(ISNULL(CONVERT([BIGINT], tSP.[physical_io]), 0)) AS [PhysicalIO]
				,ISNULL(tSP.[blocked], 0)                             AS [Blocked]
				,LTRIM(RTRIM(ISNULL(tSP.[Status], N'?')))             AS [Status]
			FROM
				[master].[dbo].[sysprocesses] tSP
			WHERE
				tSP.[spid] NOT IN (@intMySpId)
			GROUP BY
				 ISNULL(tSP.[spid], 0)
				,LTRIM(RTRIM(ISNULL(tSP.[loginame], N'?')))
				,ISNULL(tSP.[blocked], 0)
				,LTRIM(RTRIM(ISNULL(tSP.[Status], N'?')))
			;

			SELECT
				 MAX(t.[EventTime])        AS [EventTime]
				,SUM(CASE
					WHEN (t.[spid] &lt;= 51 AND t.[blocked] = 0) THEN
						1
					ELSE
						0
				END)                       AS [NumberOfSystemProcesses]
				,SUM(CASE
					WHEN (t.[spid] &gt; 51 AND t.[blocked] = 0 AND t.[Status] IN (N'sleeping', N'background', N'dormant')) THEN
						1
					ELSE
						0
				END)                       AS [NumberOfUserProcesses]
				,SUM(CASE
					WHEN (t.[spid] &gt; 51 AND t.[blocked] = 0 AND t.[Status] NOT IN (N'sleeping', N'background', N'dormant')) THEN
						1
					ELSE
						0
				END)                       AS [NumberOfActiveUserProcesses]
				,SUM(CASE
					WHEN (t.[blocked] &gt; 0) THEN
						1
					ELSE
						0
				END)                       AS [NumberOfBlockedProcesses]
			FROM
				@tblProcesses t
			;

			SELECT
				 MAX(t.[EventTime])  AS [EventTime]
				,t.[Loginame]        AS [Loginame]
				,SUM(t.[Cpu])        AS [Cpu]
				,SUM(t.[PhysicalIO]) AS [PhysicalIO]
			FROM
				@tblProcesses t
			WHERE
				t.[Loginame] NOT IN (
					N'sa'
				)
			GROUP BY
				t.[Loginame]
			;
		</sql-select-text>
		<sql-select-text MinSupportedVersion="9.*" MaxSupportedVersion="*" signature="">
			SET NOCOUNT ON;
			SET DEADLOCK_PRIORITY LOW;

			DECLARE
				@intMySpId [INTEGER]
			;

			DECLARE
				@tblProcesses TABLE
				(
					 [EventTime]  [DATETIME]      NOT NULL
					,[SpId]       [INTEGER]       NOT NULL
					,[Loginame]   [NVARCHAR](128) NOT NULL
					,[Cpu]        [BIGINT]        NOT NULL
					,[PhysicalIO] [BIGINT]        NOT NULL
					,[Blocked]    [INTEGER]       NOT NULL
					,[Status]     [NVARCHAR](128) NOT NULL
				);

			SET @intMySpId = @@spid;

			INSERT INTO @tblProcesses
			(
				 [EventTime]
				,[SpId]
				,[Loginame]
				,[Cpu]
				,[PhysicalIO]
				,[Blocked]
				,[Status]
			)
			SELECT
				 getdate()                                            AS [EventTime]
				,ISNULL(tSP.[spid], 0)                                AS [SpId]
				,LTRIM(RTRIM(ISNULL(tSP.[loginame], N'?')))           AS [Loginame]
				,SUM(ISNULL(CONVERT([BIGINT], tSP.[cpu]), 0))         AS [Cpu]
				,SUM(ISNULL(CONVERT([BIGINT], tSP.[physical_io]), 0)) AS [PhysicalIO]
				,ISNULL(tSP.[blocked], 0)                             AS [Blocked]
				,LTRIM(RTRIM(ISNULL(tSP.[Status], N'?')))             AS [Status]
			FROM
				[master].[sys].[sysprocesses] tSP
			WHERE
				tSP.[spid] NOT IN (@intMySpId)
			GROUP BY
				 ISNULL(tSP.[spid], 0)
				,LTRIM(RTRIM(ISNULL(tSP.[loginame], N'?')))
				,ISNULL(tSP.[blocked], 0)
				,LTRIM(RTRIM(ISNULL(tSP.[Status], N'?')))
			;

			SELECT
				 MAX(t.[EventTime])        AS [EventTime]
				,SUM(CASE
					WHEN (t.[spid] &lt;= 51 AND t.[blocked] = 0) THEN
						1
					ELSE
						0
				END)                       AS [NumberOfSystemProcesses]
				,SUM(CASE
					WHEN (t.[spid] &gt; 51 AND t.[blocked] = 0 AND t.[Status] IN (N'sleeping', N'background', N'dormant')) THEN
						1
					ELSE
						0
				END)                       AS [NumberOfUserProcesses]
				,SUM(CASE
					WHEN (t.[spid] &gt; 51 AND t.[blocked] = 0 AND t.[Status] NOT IN (N'sleeping', N'background', N'dormant')) THEN
						1
					ELSE
						0
				END)                       AS [NumberOfActiveUserProcesses]
				,SUM(CASE
					WHEN (t.[blocked] &gt; 0) THEN
						1
					ELSE
						0
				END)                       AS [NumberOfBlockedProcesses]
			FROM
				@tblProcesses t
			;

			SELECT
				 MAX(t.[EventTime])  AS [EventTime]
				,t.[Loginame]        AS [Loginame]
				,SUM(t.[Cpu])        AS [Cpu]
				,SUM(t.[PhysicalIO]) AS [PhysicalIO]
			FROM
				@tblProcesses t
			WHERE
				t.[Loginame] NOT IN (
					N'sa'
				)
			GROUP BY
				t.[Loginame]
			;
		</sql-select-text>
		<sqlite_statements>
			<sqlite_statement id="13">
				INSERT INTO [hist].[h_ServerInstance]
				(
					 [d_Query_id]
					,[d_ServerInstance_id]
					,[ServerInstanceName]
					,[ConnectionName]
				)
				SELECT
					 MIN(dQ.[rowid])
					,MIN(dQ.[d_ServerInstance_id])
					,dSI.[ServerInstanceName]
					,MIN(IFNULL(dSI.[ConnectionName], ''))
				FROM
					[d_Query] dQ
					INNER JOIN [d_ServerInstance] dSI ON
						dSI.[rowid] = dQ.[d_ServerInstance_id]
					LEFT OUTER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[ServerInstanceName] = dSI.[ServerInstanceName]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND dSI.[ServerInstanceName] IS NOT NULL
					AND hSI.[rowid] IS NULL
				GROUP BY
					dSI.[ServerInstanceName]
				;
			</sqlite_statement>
			<sqlite_statement id="14">
				UPDATE [hist].[h_ServerInstance] SET
					 [d_Query_id] = @d_Query_id
					,[d_ServerInstance_id] = (
						SELECT
							MIN(dQ.[d_ServerInstance_id])
						FROM
							[d_Query] dQ
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dQ.[d_ServerInstance_id] IS NOT NULL
					)
				WHERE
					[ServerInstanceName] = (
						SELECT
							MIN(dSI.[ServerInstanceName])
						FROM
							[d_Query] dQ
							INNER JOIN [d_ServerInstance] dSI ON
								dSI.[rowid] = dQ.[d_ServerInstance_id]
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dSI.[ServerInstanceName] IS NOT NULL
					) AND [d_ServerInstance_id] != (
						SELECT
							MIN(dQ.[d_ServerInstance_id])
						FROM
							[d_Query] dQ
						WHERE
							dQ.[rowid] = @d_Query_id
							AND dQ.[d_ServerInstance_id] IS NOT NULL
					)
				;
			</sqlite_statement>
			<sqlite_statement id="31">
				INSERT INTO [hist].[h_InstanceSummaryProcesses]
				(
					 [d_Query_id]
					,[h_ServerInstance_id]
					,[EventDay]
					,[EventTime]
					,[NumberOfSystemProcesses]
					,[NumberOfUserProcesses]
					,[NumberOfActiveUserProcesses]
					,[NumberOfBlockedProcesses]
				)
				SELECT
					 dQ.[rowid]
					,hSI.[rowid]
					,date(t.[EventTime])
					,t.[EventTime]
					,t.[NumberOfSystemProcesses]
					,t.[NumberOfUserProcesses]
					,t.[NumberOfActiveUserProcesses]
					,t.[NumberOfBlockedProcesses]
				FROM
					[d_Query] dQ
					INNER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
					INNER JOIN [report].[${GetInstanceSummaryProcesses}$_${1}$] t ON
						t.[d_Query_id] = dQ.[rowid]
					LEFT OUTER JOIN [hist].[h_InstanceSummaryProcesses] hISP ON
						hISP.[h_ServerInstance_id] = hSI.[rowid]
						AND hISP.[EventTime] = t.[EventTime]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND hISP.[rowid] IS NULL;
			</sqlite_statement>
			<sqlite_statement id="41">
				INSERT INTO [hist].[h_ServerInstanceLogiName]
				(
					 [d_Query_id]
					,[h_ServerInstance_id]
					,[h_LogiName_id]
					,[LogiName]
				)
				SELECT
					 dQ.[rowid]
					,hSI.[rowid]
					,0
					,t.[Loginame]
				FROM
					[d_Query] dQ
					INNER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
					INNER JOIN [report].[${GetInstanceSummaryProcesses}$_${2}$] t ON
						t.[d_Query_id] = dQ.[rowid]
					LEFT OUTER JOIN [hist].[h_ServerInstanceLogiName] hSILN ON
						hSILN.[h_ServerInstance_id] = hSI.[rowid]
						AND hSILN.[Loginame] = t.[Loginame]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND hSILN.[rowid] IS NULL;
			</sqlite_statement>
			<sqlite_statement id="42">
				INSERT INTO [hist].[h_InstanceProcessesByLogin]
				(
					 [d_Query_id]
					,[h_ServerInstance_id]
					,[h_LogiName_id]
					,[EventDay]
					,[EventTime]
					,[Cpu]
					,[PhysicalIO]
					,[EventTimeLast]
					,[CpuLast]
					,[PhysicalIOLast]
				)
				SELECT
					 dQ.[rowid]
					,hSI.[rowid]
					,hSILN.[h_LogiName_id]
					,date(t.[EventTime])
					,t.[EventTime]
					,t.[Cpu]
					,t.[PhysicalIO]
					,hIPBLB.[EventTime]
					,hIPBLB.[Cpu]
					,hIPBLB.[PhysicalIO]
				FROM
					[d_Query] dQ
					INNER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
					INNER JOIN [report].[${GetInstanceSummaryProcesses}$_${2}$] t ON
						t.[d_Query_id] = dQ.[rowid]
					INNER JOIN [hist].[h_ServerInstanceLogiName] hSILN ON
						hSILN.[h_ServerInstance_id] = hSI.[rowid]
						AND hSILN.[LogiName] = t.[LogiName]
					LEFT OUTER JOIN [hist].[h_InstanceProcessesByLogin] hIPBL ON
						hIPBL.[h_ServerInstance_id] = hSI.[rowid]
						AND hIPBL.[h_LogiName_id] = hSILN.[h_LogiName_id]
						AND hIPBL.[EventTime] = t.[EventTime]
					LEFT OUTER JOIN [hist].[h_InstanceProcessesByLoginBaseline] hIPBLB ON
						hIPBLB.[h_ServerInstance_id] = hSI.[rowid]
						AND hIPBLB.[h_LogiName_id] = hSILN.[h_LogiName_id]
				WHERE
					dQ.[rowid] = @d_Query_id
					AND hIPBL.[rowid] IS NULL
				;
			</sqlite_statement>
			<sqlite_statement id="43">
				INSERT OR REPLACE INTO [hist].[h_InstanceProcessesByLoginBaseline]
				(
					 [d_Query_id]
					,[h_ServerInstance_id]
					,[h_LogiName_id]
					,[EventDay]
					,[EventTime]
					,[Cpu]
					,[PhysicalIO]
				)
				SELECT
					 dQ.[rowid]
					,hSI.[rowid]
					,hSILN.[h_LogiName_id]
					,date(t.[EventTime])
					,t.[EventTime]
					,t.[Cpu]
					,t.[PhysicalIO]
				FROM
					[d_Query] dQ
					INNER JOIN [hist].[h_ServerInstance] hSI ON
						hSI.[d_ServerInstance_id] = dQ.[d_ServerInstance_id]
					INNER JOIN [report].[${GetInstanceSummaryProcesses}$_${2}$] t ON
						t.[d_Query_id] = dQ.[rowid]
					INNER JOIN [hist].[h_ServerInstanceLogiName] hSILN ON
						hSILN.[h_ServerInstance_id] = hSI.[rowid]
						AND hSILN.[LogiName] = t.[LogiName]
				WHERE
					dQ.[rowid] = @d_Query_id
				;
			</sqlite_statement>
		</sqlite_statements>
	</sql-select>
</sqlquery>
</root>
